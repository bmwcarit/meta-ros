# Generated by superflore -- DO NOT EDIT
#
# Copyright 2019 Open Source Robotics Foundation

inherit ros_distro_${ROS_DISTRO}
inherit ros_superflore_generated

DESCRIPTION = "ROS-Industrial support stack for facilitating communication with EtherCAT networks. The code is mainly copied from https://github.com/ros-industrial/robotiq/blob/jade-devel/robotiq_ethercat/src/ethercat_manager.cpp"
AUTHOR = "Tokyo Opensource Robotics Kyokai (TORK) Developer Team <dev@opensource-robotics.tokyo.jp>"
ROS_AUTHOR = "Jonathan Meyer <jonathan.meyer@swri.org>"
HOMEPAGE = "http://ros.org/wiki/ethercat_manager"
SECTION = "devel"
LICENSE = "BSD"
LIC_FILES_CHKSUM = "file://package.xml;beginline=12;endline=12;md5=d566ef916e9dedc494f5f793a6690ba5"

ROS_CN = "minas"
ROS_BPN = "ethercat_manager"

ROS_BUILD_DEPENDS = " \
    roscpp \
    soem \
"

ROS_BUILDTOOL_DEPENDS = " \
    catkin-native \
"

ROS_EXPORT_DEPENDS = " \
    roscpp \
    soem \
"

ROS_BUILDTOOL_EXPORT_DEPENDS = ""

ROS_EXEC_DEPENDS = " \
    roscpp \
    soem \
"

# Currently informational only -- see http://www.ros.org/reps/rep-0149.html#dependency-tags.
ROS_TEST_DEPENDS = " \
    roslaunch \
    rostest \
"

DEPENDS = "${ROS_BUILD_DEPENDS} ${ROS_BUILDTOOL_DEPENDS}"
# Bitbake doesn't support the "export" concept, so build them as if we needed them to build this package (even though we actually
# don't) so that they're guaranteed to have been staged should this package appear in another's DEPENDS.
DEPENDS += "${ROS_EXPORT_DEPENDS} ${ROS_BUILDTOOL_EXPORT_DEPENDS}"

RDEPENDS_${PN} += "${ROS_EXEC_DEPENDS}"

SRC_URI = "https://github.com/tork-a/minas-release/archive/release/kinetic/ethercat_manager/1.0.10-0.tar.gz;downloadfilename=${ROS_SP}.tar.gz"
SRC_URI[md5sum] = "b1fb4ad31da7102eaccf073be954ff74"
SRC_URI[sha256sum] = "7f379c2f576c5952a53fcadb1899a5ab76154d806b4a1712fe9329dca59820c7"
S = "${WORKDIR}/minas-release-release-kinetic-ethercat_manager-1.0.10-0"

ROS_COMPONENT_TYPE = "${@ros_distro__get_component_type('minas', d)}"
ROS_BUILD_TYPE = "catkin"

# Allow the above settings to be overridden.
ROS_INCLUDES_TREE := "${@ros_superflore_generated__get_includes_tree('minas', d)}"
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/minas/minas_common.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/minas/minas-${PV}_common.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/minas/${BPN}.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/minas/${BPN}-${PV}.inc

inherit ${ROS_COMPONENT_TYPE}_component
inherit ros_${ROS_BUILD_TYPE}
