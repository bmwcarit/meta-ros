# Generated by superflore -- DO NOT EDIT
#
# Copyright 2019 Open Source Robotics Foundation

inherit ros_distro_${ROS_DISTRO}
inherit ros_superflore_generated

DESCRIPTION = "<p>Packages in the denso suite provide controller functionality for Denso's industrial manipulators. </p>    <p><a href="http://goo.gl/kL0vnf">ORiN</a> (Open Robot interface for the Network) is a unified network interface for industrial robot applications and has been stably utilized in Denso's manipulators for years. Controllers in this package suite uses b-CAP, UDP-based control protocol defined in ORiN. It also has mechanism to detect faulty commands. Using b-CAP, ROS communicates to the embedded controller computer that has been achieving industry-proven reliability. The computer also has mechanism to detect faulty commands. That said as a whole the system maintains the same level of safeness with their commercial product setting.</p>    <p>Also, as a genuine ROS package, it enables robot application developers to access full ROS features. MoveIt! configuration package is also included for some of Denso's robots.</p>    <p>Core functionality </p>"
AUTHOR = "Ryohei Ueda <ueda@jsk.t.u-tokyo.ac.jp>"
ROS_AUTHOR = "Ryohei Ueda"
HOMEPAGE = "http://wiki.ros.org/denso"
SECTION = "devel"
LICENSE = "BSD"
LIC_FILES_CHKSUM = "file://package.xml;beginline=13;endline=13;md5=d566ef916e9dedc494f5f793a6690ba5"

ROS_CN = "denso"
ROS_BPN = "denso"

ROS_BUILD_DEPENDS = ""

ROS_BUILDTOOL_DEPENDS = " \
    catkin-native \
"

ROS_EXPORT_DEPENDS = " \
    denso-launch \
    denso-ros-control \
    vs060 \
    vs060-gazebo \
    vs060-moveit-config \
"

ROS_BUILDTOOL_EXPORT_DEPENDS = ""

ROS_EXEC_DEPENDS = " \
    denso-launch \
    denso-ros-control \
    vs060 \
    vs060-gazebo \
    vs060-moveit-config \
"

# Currently informational only -- see http://www.ros.org/reps/rep-0149.html#dependency-tags.
ROS_TEST_DEPENDS = ""

DEPENDS = "${ROS_BUILD_DEPENDS} ${ROS_BUILDTOOL_DEPENDS}"
# Bitbake doesn't support the "export" concept, so build them as if we needed them to build this package (even though we actually
# don't) so that they're guaranteed to have been staged should this package appear in another's DEPENDS.
DEPENDS += "${ROS_EXPORT_DEPENDS} ${ROS_BUILDTOOL_EXPORT_DEPENDS}"

RDEPENDS_${PN} += "${ROS_EXEC_DEPENDS}"

SRC_URI = "https://github.com/start-jsk/denso-release/archive/release/kinetic/denso/2.0.3-0.tar.gz;downloadfilename=${ROS_SP}.tar.gz"
SRC_URI[md5sum] = "c914c3395c9422f79289ca026eff95cb"
SRC_URI[sha256sum] = "3a0ed398c1dda0c12c2740b2e2227555a3ebceb8766d43b24ff95388a98aa4c9"
S = "${WORKDIR}/denso-release-release-kinetic-denso-2.0.3-0"

ROS_COMPONENT_TYPE = "${@ros_distro__get_component_type('denso', d)}"
ROS_BUILD_TYPE = "catkin"

# Allow the above settings to be overridden.
ROS_INCLUDES_TREE := "${@ros_superflore_generated__get_includes_tree('denso', d)}"
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/denso/denso_common.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/denso/denso-${PV}_common.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/denso/${BPN}.inc
include ${ROS_LAYERDIR}/${ROS_INCLUDES_TREE}/denso/${BPN}-${PV}.inc

inherit ${ROS_COMPONENT_TYPE}_component
inherit ros_${ROS_BUILD_TYPE}
